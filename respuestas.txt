18. Muestra el Hola Mundo y te devuelve nil.
21. Uno muestra literalmente el contenido entre comillas dobles y el otro interpreta los comandos que pudieran haber entre comillas simples.
22. Simplemente muestra lo que quede escrito entre {} 
24. En c queda --4--\n--2--\n
25. En c queda el resultado literal, es decir, --\#{a}--\n--\#{b}--\n
26. "he", "o", "hello"
27. "hello world"
28."..."
29. 222
30. Un array con ["this", "is", "a", "test"]
31.
32. 
33. [nil, nil, nil] Es decir, un array "vacío"
34. [0, 0, 0] Es decir, un array con tres 0
35. [[1, 2], [3, 4]]
36. Un array de tres posiciones con  [0, 2, 4] 
37. 	> a[1,1]
 	=> ["b"] 
	> a[-2,2]
 	=> ["d", "e"] 
	> a[0,2]
	=> ["a", "b"] 
	> a[0..2]
	=> ["a", "b", "c"] 
	> a[0...2]
	=> ["a", "b"] 
	> a[-2..-1]
 	=> ["d", "e"] 
38. 	> a
 	=> ["A", "B", "c", "d", "e"] 
	> a[2..5] = %w{C D E}
 	=> ["C", "D", "E"] 
	> a
 	=> ["A", "B", "C", "D", "E"] 
	> a [0,0] = [1,2,3]
 	=> [1, 2, 3] 
	> a
 	=> [1, 2, 3, "A", "B", "C", "D", "E"] 
	> a[0,2] = []
 	=> [] 
	> a
 	=> [3, "A", "B", "C", "D", "E"] 
39.  	=> [1, 2, 3] 
	> a
 	=> [1, 2, 3] 
	> a = a + [4, 5]
 	=> [1, 2, 3, 4, 5] 
	> a += [[6, 7, 8]]
 	=> [1, 2, 3, 4, 5, [6, 7, 8]] 
	2.0.0p247 :026 > a = a + 9
	TypeError: no implicit conversion of Fixnum into Array
		from (irb):26:in `+'
		from (irb):26
		from /usr/local/rvm/rubies/ruby-2.0.0-p247/bin/irb:13:in `<main>'
40. 	> x = %w{a b c b a}
 	=> ["a", "b", "c", "b", "a"] 
	> x = x - %w{b c b}
 	=> ["a", "a"]
41. [0, 0, 0, 0, 0, 0, 0, 0] 
42. 	> a << 1
 	=> [1] 
	> a << 2 << 3
 	=> [1, 2, 3] 
	> a << [4, 5, 6]
 	=> [1, 2, 3, [4, 5, 6]] 
	> a.concat [7, 8]
 	=> [1, 2, 3, [4, 5, 6], 7, 8]
43. 	> c = a | b
 	=> [1, 2, 3, 4, 5] 
	> d = b | a
 	=> [5, 4, 3, 2, 1] 
	> e = a & b
 	=> [2, 3, 4] 
	> f = b & a
 	=> [4, 3, 2]
44. 	=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 
	> b = 1...10
 	=> 1...10 
	> b.to_a
 	=> [1, 2, 3, 4, 5, 6, 7, 8, 9] 
	> b.include? 10
 	=> false 
	> b.include? 8
 	=> true 
	> b.step(2) {|x| print "#{x} " }
	1 3 5 7 9  => 1...10 
	> 1..3.to_a
	NoMethodError: undefined method `to_a' for 3:Fixnum
		from (irb):55
		from /usr/local/rvm/rubies/ruby-2.0.0-p247/bin/irb:13:in `<main>'
45.	> r.member? 50
 	=> true 
	> r.include? 99.9
 	=> true 
	> r.member? 99.9
 	=> true
46.	> true.class
 	=> TrueClass 
	> false.class
 	=> FalseClass 
	> puts "hello" if 0
	hello
 	=> nil 
	> puts "hello" if nil
	=> nil 
	> puts "hello" if ""
	(irb):65: warning: string literal in condition
	hello
 	=> nil
47. 	> x = :sym
 	=> :sym 
	> x.class
 	=> Symbol 
	> x == 'sym'
	=> false 
	> x == :sym
	=> true 
	> z = :'a long symbol'
 	=> :"a long symbol" 
	> z.class
 	=> Symbol 
	> x == 'sym'.to_sym
 	=> true 
	> x.to_s == 'sym'
 	=> true
48. 	> print s
	rub => nil 
	> t = "java"
 	=> "java" 
	> print s, t
	rubjava => nil 
49. 	=> "3 rubies" 
50. 	> x, y = 4, 5
 	=> [4, 5] 
	> z = x > y ? x : y 
 	=> 5 
	> x,y,z = [1,2,3]
 	=> [1, 2, 3]
51. 	> x.keys
 	=> [:a, :b] 
	> x.values
 	=> [1, 2] 
	> x[:c] = 3
	=> 3 
	> x
 	=> {:a=>1, :b=>2, :c=>3} 
	> x.delete('a')
 	=> nil 
	> x
 	=> {:a=>1, :b=>2, :c=>3} 
	> x.delete(:a)
 	=> 1 
	> x
 	=> {:b=>2, :c=>3} 
	> x = { :a => 1, :b => 2, :c => 4 }
 	=> {:a=>1, :b=>2, :c=>4} 
	> x.delete_if { |k,v| v % 2 == 0}
 	=> {:a=>1} 
	> x
 	=> {:a=>1} 
53. Crea una clave hash vacía, no hay diferencia
54.  => ["hello", "world", "hello", "LPP"] 
55. Crea un array de claves con valor 3, 2 y 1 y los ordena.
